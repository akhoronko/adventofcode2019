import math
from collections import defaultdict

INPUT = """
.#......##.#..#.......#####...#..
...#.....##......###....#.##.....
..#...#....#....#............###.
.....#......#.##......#.#..###.#.
#.#..........##.#.#...#.##.#.#.#.
..#.##.#...#.......#..##.......##
..#....#.....#..##.#..####.#.....
#.............#..#.........#.#...
........#.##..#..#..#.#.....#.#..
.........#...#..##......###.....#
##.#.###..#..#.#.....#.........#.
.#.###.##..##......#####..#..##..
.........#.......#.#......#......
..#...#...#...#.#....###.#.......
#..#.#....#...#.......#..#.#.##..
#.....##...#.###..#..#......#..##
...........#...#......#..#....#..
#.#.#......#....#..#.....##....##
..###...#.#.##..#...#.....#...#.#
.......#..##.#..#.............##.
..###........##.#................
###.#..#...#......###.#........#.
.......#....#.#.#..#..#....#..#..
.#...#..#...#......#....#.#..#...
#.#.........#.....#....#.#.#.....
.#....#......##.##....#........#.
....#..#..#...#..##.#.#......#.#.
..###.##.#.....#....#.#......#...
#.##...#............#..#.....#..#
.#....##....##...#......#........
...#...##...#.......#....##.#....
.#....#.#...#.#...##....#..##.#.#
.#.#....##.......#.....##.##.#.##
"""

INPUT = tuple(tuple(row) for row in INPUT.strip().splitlines())


def run():
    asteroids = []
    for y, row in enumerate(INPUT):
        for x, p in enumerate(row):
            if p == "#":
                asteroids.append((x, y))

    crossings = defaultdict(set)
    for a1 in asteroids:
        for a2 in asteroids:
            if a1 == a2:
                continue
            crossings[a1].add(angle(a1, a2))

    best_asteroid, angles = max(crossings.items(), key=lambda item: len(item[1]))
    print(best_asteroid, len(angles))


def angle(a1, a2):
    x1, y1 = a1
    x2, y2 = a2
    dx = x2 - x1
    dy = y2 - y1
    gcd = math.gcd(dx, dy)
    if gcd:
        dx /= gcd
        dy /= gcd

    return dx, dy


if __name__ == "__main__":
    run()
